set $vn_exec_flag '';
set $vn_ctx_dump '';

#for proxy_pass backend
set $vn_proxy_scheme '';
set $vn_proxy_host '';
set $vn_proxy_port '';
set $vn_header_host '';
set $vn_static_expires 'epoch';

#for static file backend
set $vn_static_root '';

location @vn_static {
	expires $vn_static_expires;
    root $vn_static_root;
}

location @vn_proxy {
	proxy_set_header Host $vn_header_host;
	#proxy_set_header X-Real-IP $remote_addr;
    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header User-Agent $http_user_agent;
    proxy_pass $vn_proxy_scheme://vn_upstream;
	proxy_ssl_verify off;
}
location /ping {
        client_max_body_size 10m;
        gzip on;
        gzip_types application/json;
        content_by_lua_block {
            local json = require("cjson")
            local data = {
                message = "OK"
            }
            local json_data = json.encode(data)
            ngx.log(ngx.INFO, "ping")
            ngx.status = 200
            ngx.header.content_type = "application/json"
            ngx.say(json_data)
            ngx.exit(200)
        }
} 
